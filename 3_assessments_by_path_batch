/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var resultsCollection = ee.ImageCollection("projects/sites-project/baselines_v5-3_by_path_monitoring"),
    legacy = ee.Image("projects/ee-valeriepasquarella/assets/ForestCondition/2017_reanalysis_meanresiduals"),
    albers = ee.Image("projects/ee-valeriepasquarella/assets/TEST_tcg_2000-2010_h13_full_2017-05-01_2017-09-30__endlap2"),
    roi = ee.FeatureCollection("projects/ee-valeriepasquarella/assets/simplified_southernNE"),
    imageCollection = ee.ImageCollection("projects/sites-project/baselines_v6-1_by_path_monitoring"),
    imageCollection2 = ee.ImageCollection("projects/sites-project/baselines_v6-2_by_path_monitoring");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var MONITORING_RESULT = imageCollection2

var OUTPUT_CRS = 'EPSG:5070'
var GFC_TCC = 75;

var weightScore = function(image) {
 var score = image.select('score_mean')
 var nobs = image.select('score_count')
 var weighted = score.multiply(nobs).rename('score_weighted')
 
 return image.addBands(weighted).reproject(OUTPUT_CRS, null, 30)
}

// Masking (for display)
var gfc = ee.Image("UMD/hansen/global_forest_change_2018_v1_6")


var gfc_mask = gfc.select('treecover2000')
  .gte(GFC_TCC)
  .reproject(OUTPUT_CRS, null, 30)



var EXPERIMENT = 1

var PATH_MIN = 11;
var PATH_MAX = 14;

// Get baselines
var experiments = MONITORING_RESULT.aggregate_array('name').distinct()
var num_experiments = experiments.size().getInfo()

// Get WRS2 paths
var paths = MONITORING_RESULT.aggregate_array('WRS_PATH').distinct()
var num_paths = paths.size().getInfo()



var result = imageCollection2.filterMetadata('name', 'equals', 'tcg_2000-2010_h13_full')
print('Experiment name:', experiments.get(EXPERIMENT))

// Get total number of observations per pixel
var totalObs = result.select('score_count').reduce('sum')
  .reproject(OUTPUT_CRS, null, 30)

// Weight mean scores by nobs per Path
var resultWts = result.map(weightScore)

// Compute weighted mean
var resultFinal = resultWts.select('score_weighted')
  .reduce('sum')
  .divide(totalObs)
  



// Palette for mapped results
var min = -4;
var max = 0;
var palette = ['red', 'orange', 'yellow', 'blue']
var viz = {min: min, max: max, palette: palette};



Map.addLayer(legacy.clip(roi).updateMask(gfc_mask), viz, 'Original non-EE results (reference?)')
Map.addLayer(albers.select('score_mean').updateMask(gfc_mask), viz, 'Analysis in Albers')
Map.addLayer(resultFinal.updateMask(gfc_mask), viz, 'Analysis in UTM, Albers as last step')

Map.addLayer(totalObs, {min: 0, max:20}, 'Number of observations per pixel', false)

for(var path = PATH_MIN; path <= PATH_MAX; path++){
  var path_result = result.filterMetadata('WRS_PATH', 'equals', path)
    .first()
  
  Map.addLayer(path_result.select('score_mean'), viz, 'Path ' + path + ' (in UTM)', false)
}

var style = {
  'Figure': [{
      featureType: 'all',
      stylers: [{ color: '#000000'}]
  }]
};

// Set map options.
Map.setOptions(null, style);
Map.setOptions('SATELLITE')

