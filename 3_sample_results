
var EXPERIMENTS = ee.ImageCollection('projects/sites-project/conditionassessment_experiments_v5-2_results')

var WHICH_SAMPLE = 2;
var YEAR = 2018
var VERSION = 'v2-1'

// Get plot locations
if (WHICH_SAMPLE == 1) {
  // Massachusetts
  var SAMPLE_NAME = 'ma_quabbin';
  var SAMPLE_FN = 'projects/ee-valeriepasquarella/assets/HF-GM/PlotDefHarvSimple';
  var SAMPLE = ee.FeatureCollection(SAMPLE_FN);
  
} else if (WHICH_SAMPLE == 2) {
  // Connecticut
  var SAMPLE_NAME = 'ct_burlap'
  var SAMPLE_FN = 'projects/ee-valeriepasquarella/assets/CT-GM/FEN_BurlapSurvey_Coords';
  var SAMPLE = ee.FeatureCollection(SAMPLE_FN)
    .filterMetadata('Year', 'equals', YEAR);
    
}

// Get results for selected year
var selectedExperiments = EXPERIMENTS.filterMetadata('monitor_year', 'equals', YEAR)

var reanalysis_cn = 'm_reanalysis'
if (YEAR >= 2015 & YEAR <= 2018) {
  var reanalysis_fn = 'projects/ee-valeriepasquarella/assets/ForestCondition/' + YEAR + '_reanalysis_meanresiduals'
  var reanalysis = ee.Image(reanalysis_fn).reproject('EPSG:5070').rename(reanalysis_cn)
} else {
  var reanalysis = ee.Image.constant(99).rename(reanalysis_cn)
}
print(reanalysis)

// function to convert image collection to multiband image
function collectionToImage(collection){
  var stack = ee.Image(collection.iterate(function(img, prev) {
    var score = img.select('score_mean')
    var index = ee.String('m_').cat(ee.String(img.get('system:index')))
    score = score.rename(index)
    return ee.Image(prev).addBands(score);
  }, ee.Image(1)));

  stack = stack.select(ee.List.sequence(1, stack.bandNames().size().subtract(1)));
  return stack;
}

// convert collection results to image
var scoreImage = collectionToImage(selectedExperiments);

// add reanalysis result
scoreImage = scoreImage.addBands(reanalysis)

// sample plot locations
var result = scoreImage.reduceRegions({
        reducer: ee.Reducer.min(),
        collection: SAMPLE,
        scale: 1,
        crs: 'EPSG:5070'
      });


// check results
print(scoreImage)
print(result)

// Palette
var min = -4;
var max = 0;
var palette = ['red', 'orange', 'yellow', 'blue']
var viz = {min: min, max: max, palette: palette};

var map_result = 6

Map.addLayer(scoreImage.select(map_result), viz, 'result')
Map.addLayer(SAMPLE, {}, 'sample points');

print(ee.String(scoreImage.select(map_result).bandNames().get(0)))

// Export
Export.table.toDrive({
  collection: result,
  description: 'exportTable',
  folder: 'ee-conditionassessment',
  fileNamePrefix: 'plots_' + SAMPLE_NAME + '_' + YEAR + '_' + VERSION ,
});

// Map styling
var style = {
  'Figure': [{
      featureType: 'all',
      stylers: [{ color: '#000000'}]
  }]
};

// Set map options.
Map.setOptions(null, style);
