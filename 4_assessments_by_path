/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var resultsCollection = ee.ImageCollection("projects/sites-project/baselines_v5-3_by_path_monitoring"),
    legacy = ee.Image("projects/ee-valeriepasquarella/assets/ForestCondition/2017_reanalysis_meanresiduals"),
    albers = ee.Image("projects/ee-valeriepasquarella/assets/TEST_tcg_2000-2010_h13_full_2017-05-01_2017-09-30__endlap2");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var EXPERIMENT = 0

var PATH_MIN = 11;
var PATH_MAX = 14;

// Palette for mapped results
var min = -4;
var max = 0;
var palette = ['red', 'orange', 'yellow', 'blue']
var viz = {min: min, max: max, palette: palette};

var weightScore = function(image) {
 var score = image.select('score_mean')
 var nobs = image.select('score_count')
 var weighted = score.multiply(nobs).rename('score_weighted')
 
 return image.addBands(weighted).reproject('EPSG:5070', null, 30)
}

// Get experiments
var experiments = resultsCollection.aggregate_array('name').distinct()

// Get specified experiment
var result = resultsCollection.filterMetadata('name', 'equals', experiments.get(EXPERIMENT))
print(experiments.get(EXPERIMENT))


// Add reanalysis product
Map.addLayer(legacy, viz, 'reanalysis product')

// Add test with Albers baseline approach
Map.addLayer(albers.select('score_mean'), viz, 'projection test')


// Get total number of observations per pixel
var totalObs = result.select('score_count').reduce('sum')

// Weight score by nobs per Path
var resultWts = result.map(weightScore)


// Compute weighted mean
var resultFinal = resultWts.select('score_weighted').reduce('sum').divide(totalObs)

Map.addLayer(resultFinal, viz, 'weighted mean score')
Map.addLayer(totalObs, {min: 0, max:20}, 'number of observations used for monitoring', false)

// Map results for each Path
for(var path = PATH_MIN; path <= PATH_MAX; path++){
  var path_result = result.filterMetadata('WRS_PATH', 'equals', path)
    .first()
  
  Map.addLayer(path_result.select('score_mean'), viz, 'Path ' + path, false)
}