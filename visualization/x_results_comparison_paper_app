/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var wrs2 = ee.FeatureCollection("projects/ee-valeriepasquarella/assets/wrs2_descending"),
    geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-72.23501892402889, 41.807357153800126],
         [-72.32660683603468, 41.887064648114055],
         [-72.24467500916975, 42.428951297130176],
         [-72.25194911282166, 42.43278961115788]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// |
// | Landsat Time Series Assessment -- Compare mapped results
// | [valpasq@bu.edu], 2020
// |
// |
// | This script loads mapped results for a specified year for comparison.


// ------------------------------------- Imports  ------------------------------------- 

var RESULTS_COLLECTION = ee.ImageCollection('projects/sites-project/baselines_v6-3_by_path_monitoring_qa_final')
var ma_quabbin = ee.FeatureCollection('projects/ee-valeriepasquarella/assets/HF-GM/PlotDefHarvSimple')
var ct_burlap = ee.FeatureCollection('projects/ee-valeriepasquarella/assets/CT-GM/FEN_BurlapSurvey_Coords')
var study_area = ee.FeatureCollection('projects/ee-valeriepasquarella/assets/simplified_southernNE')
var NLCD = ee.Image('USGS/NLCD/NLCD2011')

// ------------------------------------- Config ------------------------------------- 

var YEAR = 2017
var MIN_TCC = 75;

// ---------------------------------- Visualization  ---------------------------------- 

var min = -4;
var max = 0;
var palette = ['red', 'orange', 'yellow', 'blue']
var viz = {min: min, max: max, palette: palette};


// Set up UI Panel
var map = ui.Map();
var panel = ui.Panel({
    style: {
      width: '200px',
      height: '90px',
      position: 'top-left',
      backgroundColor: 'rgba(255, 255, 255, 0.5)'
    }
  });
  
// Create colorbar for legend.
function ColorBar(palette) {
  return ui.Thumbnail({
    image: ee.Image.pixelLonLat().select(0),
    params: {
      bbox: [0, 0, 1, 0.1],
      dimensions: '100x10',
      format: 'png',
      min: 1,
      max: 0,
      palette: palette,
    },
    style: {stretch: 'horizontal', margin: '2px 2px'},
  });
}

// Build legend
function makeLegend(palette) {
  var legendTitle = ui.Label({
    value: 'Detected Change in Forest Condition',
    style: {
      fontWeight: 'bold',
      fontSize: '12px',
      margin: '0 0 2px 0',
      padding: '0',
      backgroundColor: 'rgba(255, 255, 255, 0)'
    }
    });
    
  var labelPanel = ui.Panel({
      widgets: [
        ui.Label('Normal', {margin: '0px 0px', backgroundColor: 'rgba(255, 255, 255, 0)', fontSize: '12px'}),
        ui.Label('Moderate', {margin: '0px 0px', textAlign: 'center', stretch: 'horizontal', backgroundColor: 'rgba(255, 255, 255, 0)', fontSize: '12px'}),
        ui.Label('Large', {margin: '0px 0px',backgroundColor: 'rgba(255, 255, 255, 0)', fontSize: '12px'})
      ],
      layout: ui.Panel.Layout.flow('horizontal'),
      style: { backgroundColor: 'rgba(255, 255, 255, 0)'}});
  
  return ui.Panel({
    widgets: [legendTitle, ColorBar(palette), labelPanel],
    style: {position: 'bottom-right',
      backgroundColor: 'rgba(255, 255, 255, 0.75)'
    }
  });
}

  
// Mask based on Tree Canopy Cover
var tcc_mask = NLCD.select('percent_tree_cover')
  .clip(study_area)
  .gte(MIN_TCC)
  .reproject('EPSG:5070', null, 30)

// Legacy results
var reanalysis_cn = 'reanalysis_score'
if (YEAR >= 2015 & YEAR <= 2018) {
  var reanalysis_fn = 'projects/ee-valeriepasquarella/assets/ForestCondition/' + YEAR + '_reanalysis_meanresiduals'
  var reanalysis = ee.Image(reanalysis_fn)
    .clip(study_area)
    .updateMask(tcc_mask)
    .rename(reanalysis_cn)
} 

// Get results
var selectedResults = RESULTS_COLLECTION.filterMetadata('monitor_year', 'equals', YEAR)
var names_list = selectedResults
    .aggregate_array('name')
    .distinct()
    .getInfo()

// Select by experiment
var select = ui.Select({
  items: names_list,
  onChange: function(value) {
    map.layers().reset();

    select.style().set('stretch', 'horizontal');
    
    var assessment = ee.Image(RESULTS_COLLECTION.filterMetadata('name', 'equals', value).first())
    var assessment_masked = assessment.updateMask(tcc_mask)

    map.addLayer(reanalysis.select('reanalysis_score'), viz, 'reanalysis', false)
    map.addLayer(assessment_masked.select('score_weighted_mean'), viz, value, true)
    
    redraw()
    
}});

// Set up Select Experiment pulldown
select.setPlaceholder('Select an experiment')
select.style().set('stretch', 'horizontal')

// Set up Autozoom checkbox
var autoZoom = ui.Checkbox('Auto-zoom', null, null, null, {backgroundColor: 'rgba(255, 255, 255, 0)', fontSize: '10px'});
autoZoom.setValue(1)

// Set up panel
panel.add(select).add(autoZoom);
ui.root.clear();
ui.root.add(map.add(panel));

// Configure map to have a Figure display option.
var style = {
  'Figure': [{
      featureType: 'all',
      stylers: [{ color: '#000000'}]
  }]
};

var states_display = ee.FeatureCollection("TIGER/2018/States")
    .filter(ee.Filter.inList('STUSPS', ['MA', 'CT', 'RI'])) 
    
var state_outlines = ee.Image().byte().paint({
    featureCollection: states_display,
    color: 1,
    width: 1
  });  
    

// Function to redraw "base" layers 
function redraw() {

  map.addLayer(state_outlines, {palette: 'gray'}, 'State boundaries')
  map.addLayer(ct_burlap.draw({color: 'white', pointRadius: 1}), {}, 'CT plots', true)
  map.addLayer(ma_quabbin.draw({color: 'white', pointRadius: 1}), {}, 'MA plots', true)
  

  map.setOptions(null, style);
  map.setOptions('SATELLITE');
  map.style().set({cursor:'crosshair'});
  
  if (autoZoom.getValue() === true){
    map.centerObject(RESULTS_COLLECTION, 8)
  }
  
  
}

// Initialize map
map.add(makeLegend(palette))
redraw()