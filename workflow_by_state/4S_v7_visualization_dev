/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageCollection2 = ee.ImageCollection("projects/sites-project/baselines_v7-1_by_state_products");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// |
// | Landsat Time Series Harmonic Condition Assessment -- 
// | Visualize products
// | 
// | [valpasq@bu.edu], 2020
// |
// |
// | This script is used to add spatially smoothed and thresholded 
// | products to the map. All years added at once.

// -------------------- IMAGE COLLECTION ---------------------

var FINAL_PRODUCTS = imageCollection2;

var START_ASSESS = 2010;
var END_ASSESS = 2020;

var THRESHOLD = -2;

// -------------------- VISUALIZATION SETUP -------------------

var MIN = -4;
var MAX = 0;
var PALETTE = ['red', 'orange', 'yellow', 'blue'];
var viz = {min: MIN, max: MAX, palette: PALETTE};

// ----------------------- GET RESULTS ------------------------

var images = FINAL_PRODUCTS
    .filterMetadata('monitor_year', 'not_less_than', START_ASSESS)
    .filterMetadata('monitor_year', 'not_greater_than', END_ASSESS);
var years = images
    .aggregate_array('monitor_year')
    .distinct();
var num_years = years.size().getInfo();
print(years);

// Loop over years to add each product to Map
for(var year = 0; year < num_years; year++){
  var year_value = years.get(year);
  
  var disp_img = images
      .filterMetadata('monitor_year', 'equals', year_value)
      .mosaic();
      
  var score_disp = disp_img
      .focal_mean(30, 'circle', 'meters', 1);
  
  var thresh_mask = score_disp.select('weighted_mean').lte(THRESHOLD);
  score_disp = score_disp.updateMask(thresh_mask);

  // c = (1 / (1 + s))^0.6;
  // c = (TanH(7*(c - 0.5)) + 1)*0.5;
  var confidence_scale = ee.Image(1)
    .divide(score_disp.select('weighted_stddev').add(1))
    .pow(0.6)
    .subtract(0.5).multiply(7)
    .tanh()
    .add(1).multiply(0.5);

  var score_mean_viz_alpha = score_disp.select('weighted_mean')
      .visualize(viz)
      .toUint8()
      .updateMask(thresh_mask.multiply(confidence_scale));
  
  var year_str = year_value.getInfo();
  
  Map.addLayer(score_mean_viz_alpha, {}, 'score ' + year_str, true);
  
}

// ----------------------- MAP STYLING ------------------------
 
var style = {
  'Figure': [{
      featureType: 'all',
      stylers: [{ color: '#000000'}]
  }]
};

Map.setOptions(null, style);
Map.setOptions('SATELLITE');
