/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var imageCollection_old = ee.ImageCollection("projects/sites-project/baselines_v5-3_by_path"),
    imageCollection = ee.ImageCollection("projects/sites-project/baselines_v6-3_by_path"),
    geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-71.66353265869574, 42.36458922421757],
          [-71.66353265869574, 42.30799500232391],
          [-71.567402287602, 42.30799500232391],
          [-71.567402287602, 42.36458922421757]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var PATH_MIN = 11;
var PATH_MAX = 14;
var OBS_MIN = 50;

var show = 'rmse'


var COLLECTION = imageCollection

// Get results
var experiments = COLLECTION.aggregate_array('name').distinct()
// print(experiments.get(0))
// print(COLLECTION
//     .filterMetadata('name', 'equals', experiments.get(0)))

for(var path = PATH_MIN; path <= PATH_MAX; path++){
  var baseline_prev = COLLECTION
    .filterMetadata('name', 'equals', experiments.get(0))
    .filterMetadata('WRS_PATH', 'equals', path-1)
    .first()
  // print(baseline_prev)
  baseline_prev = baseline_prev.updateMask(baseline_prev.select('nobs').gte(OBS_MIN))
  
  var baseline = COLLECTION
    .filterMetadata('name', 'equals', experiments.get(0))
    .filterMetadata('WRS_PATH', 'equals', path)
    .first()

  baseline = baseline.updateMask(baseline.select('nobs').gte(OBS_MIN))
  
  Map.addLayer(baseline.select('rmse'), {min:0, max:0.1}, 'Path ' + path)
  // Map.addLayer(baseline.select('nobs'), {min:0, max:250}, 'Path ' + path)
  // Map.addLayer(baseline.select('constant'), {min:0, max:0.5}, 'Path ' + path)
  
  
  if (path > PATH_MIN){
    var diff_name = 'Path ' + path + '_minus_prev'
    var diff = baseline.subtract(baseline_prev).reproject('EPSG:32619', null, 30)

      // Map.addLayer(diff.select('rmse'), {min:0, max:0.01}, 'Path ' + path)
      // Map.addLayer(diff.select('constant'), {min:0, max:0.1}, 'Path ' + path)
  //   Map.addLayer(diff.select(['constant','nobs', 'rmse']), {min:-0.01, max:0.01}, diff_name)

  }
}
  
var test = COLLECTION
  .filterMetadata('name', 'equals', experiments.get(0))
  .filterBounds(geometry)
print(test)
// test = test.updateMask(test.select('nobs').gte(OBS_MIN))

// function to convert image collection to multiband image
function collectionToImage(collection){
  var stack = ee.Image(collection.iterate(function(img, prev) {
    
    return ee.Image(prev).addBands(img.select('constant'));
  }, ee.Image(1)));

  stack = stack.select(ee.List.sequence(1, stack.bandNames().size().subtract(1)));
  return stack;
}

// convert collection results to image
var test_as_bands = collectionToImage(test);
print(test_as_bands)

Map.addLayer(test_as_bands)
print(ui.Chart.image.histogram(test_as_bands.select(['constant_2', 'constant_3']), geometry, 30, 100, 0.1));



var style = {
  'Figure': [{
      featureType: 'all',
      stylers: [{ color: '#000000'}]
  }]
};

// Set map options.
Map.setOptions(null, style);
Map.setOptions('SATELLITE')

